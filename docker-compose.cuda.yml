version: '3.8'

services:
  rapidraw-gpu:
    build:
      context: .
      dockerfile: Dockerfile.cuda
      args:
        BUILDKIT_INLINE_CACHE: 1
    image: rapidraw-cuda:latest
    container_name: rapidraw-gpu
    runtime: nvidia
    restart: unless-stopped
    
    ports:
      # Web access via noVNC
      - "6080:6080"
      # Direct VNC access
      - "5901:5901"
    
    shm_size: '2gb'
    
    environment:
      # NVIDIA GPU settings
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
      - CUDA_VISIBLE_DEVICES=0
      
      # Display settings
      - VNC_RESOLUTION=1920x1080
      - VNC_COL_DEPTH=24
      
      # Performance settings
      - WGPU_BACKEND=vulkan
      - __NV_PRIME_RENDER_OFFLOAD=1
      - __GLX_VENDOR_LIBRARY_NAME=nvidia
      
    volumes:
      # User data persistence
      - rapidraw-home:/home/ai
      
      # Separate volumes for specific directories
      - rapidraw-pictures:/home/ai/Pictures
      - rapidraw-projects:/home/ai/Documents/RapidRAW
      
      # Optional: Mount host pictures directory
      # - /path/to/your/photos:/home/ai/Pictures/Import
      
    # GPU resource reservation
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu, compute, utility, graphics, display, video]
        limits:
          cpus: '8'
          memory: 32G
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    # Additional GPU devices for Jetson
    devices:
      - /dev/nvhost-ctrl
      - /dev/nvhost-ctrl-gpu
      - /dev/nvhost-prof-gpu
      - /dev/nvmap
      - /dev/nvhost-gpu
      - /dev/nvhost-as-gpu

volumes:
  rapidraw-home:
    driver: local
  rapidraw-pictures:
    driver: local
  rapidraw-projects:
    driver: local
